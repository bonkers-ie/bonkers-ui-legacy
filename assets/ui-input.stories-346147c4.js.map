{"version":3,"file":"ui-input.stories-346147c4.js","sources":["../../src/components/ui-input/_typings.ts","../../src/components/ui-input/ui-input.vue"],"sourcesContent":["export enum EInputKinds {\n\tPRIMARY = \"PRIMARY\",\n\tSECONDARY = \"SECONDARY\",\n\tERROR = \"ERROR\",\n}\n\nexport enum EInputType {\n\tTEXT = \"text\",\n\tNUMBER = \"number\",\n\tTEL = \"tel\",\n\tPASSWORD = \"password\",\n\tEMAIL = \"email\",\n\tDATE = \"date\",\n}\n","<template>\n\t<div class=\"ui-input\">\n\t\t<slot name=\"header\">\n\t\t\t<ui-typography\n\t\t\t\tv-if=\"heading\"\n\t\t\t\tclass=\"mb-xs\"\n\t\t\t\t:size=\"ETypographySizes.MD\"\n\t\t\t\tline-height\n\t\t\t>\n\t\t\t\t{{ heading }}\n\t\t\t</ui-typography>\n\t\t</slot>\n\t\t<label\n\t\t\tclass=\"ui-input__wrapper flex w-full items-center gap-xs rounded-lg border bg-white p-sm\"\n\t\t\t:class=\"[\n\t\t\t\tkind === EInputKinds.SECONDARY && 'border-secondary-alt-500 hover:border-secondary-alt-700',\n\t\t\t\tkind === EInputKinds.PRIMARY && 'border-primary',\n\t\t\t\tkind === EInputKinds.ERROR && 'border-error',\n\n\t\t\t\tdisabled && 'border-secondary-alt-300 bg-secondary-alt-200',\n\t\t\t]\"\n\t\t>\n\t\t\t<slot name=\"prefix-icon\" />\n\n\t\t\t<input\n\t\t\t\t:autocomplete=\"getAutoComplete()\"\n\t\t\t\t:value=\"modelValue\"\n\t\t\t\t:pattern=\"pattern\"\n\t\t\t\tclass=\"w-full border-0 bg-transparent outline-none placeholder:italic placeholder:text-secondary-alt\"\n\t\t\t\t:type=\"type\"\n\t\t\t\t:placeholder=\"placeholder\"\n\t\t\t\t:maxlength=\"maxlength\"\n\t\t\t\t:minlength=\"minlength\"\n\t\t\t\t@input=\"$emit('update:modelValue', ($event.target as HTMLTextAreaElement)?.value)\"\n\t\t\t\t@focus=\"focusHandler || (()=>undefined)\"\n\t\t\t>\n\n\t\t\t<slot name=\"postfix-icon\" />\n\t\t</label>\n\n\t\t<slot name=\"subLabel\">\n\t\t\t<ui-typography\n\t\t\t\tv-if=\"subLabel\"\n\t\t\t\tline-height\n\t\t\t\t:size=\"ETypographySizes.SM\"\n\t\t\t\t:kind=\"EColors.SECONDARY_ALT\"\n\t\t\t\tclass=\"mt-xs\"\n\t\t\t>\n\t\t\t\t{{ subLabel }}\n\t\t\t</ui-typography>\n\t\t</slot>\n\t</div>\n</template>\n\n<script lang=\"ts\" setup>\n\timport { EInputKinds, EInputType } from \"./_typings\";\n\timport UiTypography, { ETypographySizes, EColors } from \"../ui-typography\";\n\n\tconst props = withDefaults(defineProps<{\n\t\tplaceholder?: string;\n\t\tmodelValue: string | number;\n\t\tdisabled?: boolean;\n\t\tkind?: EInputKinds;\n\t\theading?: string;\n\t\tsubLabel?: string;\n\t\ttype?: EInputType;\n\t\tpattern?: string;\n\t\tmaxlength?: string;\n\t\tminlength?: string;\n\t\tfocusHandler?: (e:FocusEvent) => void;\n\t\tautocomplete?: string;\n\t}>(), {\n\t\tmodelValue: \"\",\n\t\tplaceholder: \"\",\n\t\tautocomplete: \"\",\n\t\theading: undefined,\n\t\tsubLabel: undefined,\n\t\tpattern: undefined,\n\t\tmaxlength: undefined,\n\t\tminlength: undefined,\n\t\ttype: EInputType.TEXT,\n\t\tfocusHandler: ()=>undefined,\n\t\tkind: EInputKinds.SECONDARY\n\t});\n\n\tdefineEmits([\"update:modelValue\"]);\n\n\tconst getAutoComplete =()=> {\n\t\tif (props.autocomplete !== \"\") return props.autocomplete;\n\t\tswitch (props.type) {\n\t\t\tcase EInputType.PASSWORD: return \"current-password\";\n\t\t\tcase EInputType.EMAIL: return \"email\";\n\t\t\tdefault: return \"off\";\n\t\t}\n\t};\n\n</script>\n"],"names":["EInputKinds","EInputType","getAutoComplete","props"],"mappings":"oMAAY,IAAAA,GAAAA,IACXA,EAAA,QAAU,UACVA,EAAA,UAAY,YACZA,EAAA,MAAQ,QAHGA,IAAAA,GAAA,CAAA,CAAA,EAMAC,GAAAA,IACXA,EAAA,KAAO,OACPA,EAAA,OAAS,SACTA,EAAA,IAAM,MACNA,EAAA,SAAW,WACXA,EAAA,MAAQ,QACRA,EAAA,KAAO,OANIA,IAAAA,GAAA,CAAA,CAAA,+fCiFLC,EAAiB,IAAK,CAC3B,GAAIC,EAAM,eAAiB,GAAI,OAAOA,EAAM,aAC5C,OAAQA,EAAM,KAAM,CACnB,KAAKF,EAAW,SAAiB,MAAA,mBACjC,KAAKA,EAAW,MAAc,MAAA,QAC9B,QAAgB,MAAA,KACjB,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}