{"version":3,"file":"ui-verification-input.stories-7098b6f2.js","sources":["../../src/components/ui-verification-input/ui-verification-input.vue"],"sourcesContent":["<template>\n\t<div\n\t\tclass=\"inputs grid\"\n\t>\n\t\t<div\n\t\t\tv-for=\"(_, index) in inputsCount\"\n\t\t\t:key=\"index\"\n\t\t\tclass=\"input-wrapper\"\n\t\t>\n\t\t\t<input\n\t\t\t\tref=\"inputsRefs\"\n\t\t\t\t:type=\"type || 'text'\"\n\t\t\t\tmaxlength=\"1\"\n\t\t\t\tplaceholder=\"&#8226;\"\n\t\t\t\t@input=\"(e)=>inputHandler(e, index)\"\n\t\t\t\t@focus=\"focusHandler\"\n\t\t\t\t@paste=\"handlePaste\"\n\t\t\t>\n\t\t\t<div class=\"bottom-wrapper\" />\n\t\t</div>\n\t</div>\n\t<slot name=\"button\" />\n</template>\n\n<script lang=\"ts\" setup>\n\timport { ref } from \"vue\";\n\n\ttype TProps = {\n\t\tinputsCount: number;\n\t\ttype?: \"text\";\n\t}\n\n\tconst props = defineProps<TProps>();\n\tconst emit = defineEmits([\"onFiled\"]);\n\n\tconst inputsRefs = ref<Array<HTMLInputElement | null>>([]);\n\n\tconst doSubmit = ()=>{\n\t\tconst generateString = inputsRefs.value.map(input => input?.value).join(\"\");\n\t\temit(\"onFiled\", generateString);\n\t};\n\n\tconst inputHandler = (event:Event, index:number)=>{\n\t\tif(index < props.inputsCount){\n\t\t\tinputsRefs.value[index + 1]?.focus();\n\t\t}\n\n\t\tif(index === props.inputsCount - 1){\n\t\t\tdoSubmit();\n\t\t}\n\t};\n\n\tconst focusHandler = (e:FocusEvent) => {\n\t\tif(e.target){\n\t\t\t(e.target as HTMLInputElement).select();\n\t\t}\n\t};\n\n\tconst handlePaste = (e:ClipboardEvent) => {\n\t\te.preventDefault();\n\t\tconst pasteText = e.clipboardData?.getData(\"text\");\n\t\tif(pasteText && pasteText.length === props.inputsCount) {\n\t\t\tinputsRefs.value[props.inputsCount - 1]?.focus();\n\n\t\t\tinputsRefs.value.forEach((input, index)=>{\n\t\t\t\tif(input){\n\t\t\t\t\tinput.value = pasteText[index];\n\t\t\t\t}\n\t\t\t});\n\t\t\tdoSubmit();\n\t\t}\n\n\t};\n\n</script>\n\n<style scoped>\n\t.inputs {\n\t\tgrid-template-columns: repeat(auto-fill, 38px);\n\t\tgrid-gap: 24px;\n\t}\n\n\t.inputs .input-wrapper {\n\t\tposition: relative;\n\t\theight: 58px;\n\t}\n\n\t.inputs input {\n\t\twidth: 100%;\n\t\tborder: none;\n\t\ttext-align: center;\n\t\tfont-size: 36px;\n\t\tfont-weight: bold;\n\t\toutline: none;\n\n\t\t/* caret-color:  var(--color-transparent); */\n\t}\n\n\t.inputs .input-wrapper .bottom-wrapper {\n\t\tposition: absolute;\n\t\tbottom: 0;\n\t\twidth: 100%;\n\t\theight: 5px;\n\t\tbackground-color: var(--color-secondary-300);\n\t\tborder-radius: 3px;\n\t\ttransition: background-color 0.3s ease-in-out;\n\t}\n\n\t.inputs input:focus ~ .bottom-wrapper {\n\t\tbackground-color: var(--color-primary);\n\t}\n\n\t.inputs input::placeholder {\n\t\tfont-size: 55px;\n\t\tcolor: var(--color-secondary-300);\n\t\topacity: 1;\n\t\ttransform: scale(1);\n\t\ttransition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;\n\t}\n\n\t.inputs input:focus::placeholder {\n\t\topacity: 0;\n\t\ttransform: scale(0);\n\t}\n\n</style>\n"],"names":["inputsRefs","ref","doSubmit","generateString","input","emit","inputHandler","event","index","props","_a","focusHandler","e","handlePaste","pasteText","_b"],"mappings":"gbAmCOA,EAAaC,EAAoC,CAAA,CAAE,EAEnDC,EAAW,IAAI,CACd,MAAAC,EAAiBH,EAAW,MAAM,OAAaI,GAAA,YAAAA,EAAO,KAAK,EAAE,KAAK,EAAE,EAC1EC,EAAK,UAAWF,CAAc,CAAA,EAGzBG,EAAe,CAACC,EAAaC,IAAe,OAC9CA,EAAQC,EAAM,eAChBC,EAAAV,EAAW,MAAMQ,EAAQ,CAAC,IAA1B,MAAAE,EAA6B,SAG3BF,IAAUC,EAAM,YAAc,GACvBP,GACV,EAGKS,EAAgBC,GAAiB,CACnCA,EAAE,QACHA,EAAE,OAA4B,QAChC,EAGKC,EAAeD,GAAqB,SACzCA,EAAE,eAAe,EACjB,MAAME,GAAYJ,EAAAE,EAAE,gBAAF,YAAAF,EAAiB,QAAQ,QACxCI,GAAaA,EAAU,SAAWL,EAAM,eAC1CM,EAAAf,EAAW,MAAMS,EAAM,YAAc,CAAC,IAAtC,MAAAM,EAAyC,QAEzCf,EAAW,MAAM,QAAQ,CAACI,EAAOI,IAAQ,CACrCJ,IACIA,EAAA,MAAQU,EAAUN,CAAK,EAC9B,CACA,EACQN,IACV;;;;;;;;;;;;;;;;;;"}